import React, { Component } from 'react';
import {Platform, View, Text, StyleSheet, ImageBackground, StatusBar, Image, ScrollView, ActivityIndicator } from 'react-native';
import HeaderPage from "../components/Header";
import AudioComponent from "../components/Vedio"
import { scale, verticalScale, moderateScale } from 'react-native-size-matters';
import PushNotification from "react-native-push-notification"

export default class OurHomepage extends Component {
    constructor(props) {
        super(props)
        this.state = {
            switchValue: true,
            isLoading: false,stramUri:"",PlayOne:true,timmerOne:0,PlayTwo:true
        }
    }
    componentDidMount() {
        this.setState({ isLoading: true })
        this.configurationPushNotifications()
    }
    hideSpinner = () => {
        this.setState({ isLoading: false })
    }

        configurationPushNotifications = async()=>{
            if(Platform.OS === "android"){
                
                await this._ConfigurePushNotification();
                 
            }
        }


        
            _ConfigurePushNotification = ()=>{
                
                PushNotification.configure({
        
                    onRegister: function(token) {
                        console.log("Notifications",token);
                      
                    },
                    onNotification: notification => {
                        
                        if(notification.foreground){
                       
                            this.callNotification(notification.title,notification.message);
                           }
                           console.log("Notifications",notification);
                        
                        
                      },
                    senderID: "491719508101",
                    permissions: {
                      alert: true,
                      badge: true,
                      sound: true
                    },foreground:true,
                    popInitialNotification: true,
                    requestPermissions: true
                  });
                  
            }
            callNotification = (msg,tag) =>{

        
                PushNotification.localNotificationSchedule({
                    // /* Android Only Properties */
                    // id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
                    // ticker: "My Notification Ticker", // (optional)
                    autoCancel: true, // (optional) default: true
                    // largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
                    // smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
                    // bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
                    // subText: "This is a subText", // (optional) default: none
                    // color: "red", // (optional) default: system default
                    // vibrate: true, // (optional) default: true
                    // vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
                    // tag: 'some_tag', // (optional) add tag to message
                    // group: "group", // (optional) add group to message
                    // ongoing: false, // (optional) set whether this is an "ongoing" notification
                    // priority: "high", // (optional) set notification priority, default: high
                    visibility: "private", // (optional) set notification visibility, default: private
                    // importance: "high", // (optional) set notification importance, default: high
                 
                    /* iOS only properties */
                    // alertAction: null, // (optional) default: view
                    // category: null,// (optional) default: null
                    // userInfo:{name:"osaf"}, // (optional) default: null (object containing additional notification data)
                 
                    /* iOS and Android properties */
                    title: msg, // (optional)
                    message: tag , // (required)
                    playSound: false, // (optional) default: true
                    soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
                    number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
                    // repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
                    // actions: '["Yes", "No"]',  // (Android only) See the doc for notification actions to know more
                    date:new Date(),tag:tag
                });
            }



    onToggele = (value) => {
        this.setState({
            switchValue: value
        },()=>{
            if(this.state.switchValue){
                    this.setState({
                        isLoading:true
                    })
            }
        })
    }
    btnOne= ()=>{
        
            this.setState({
                stramUri:true ,PlayOne:!this.state.PlayOne
            })
       if(!this.state.PlayTwo){
           this.setState({
               PlayTwo:true
           })

       }
    }
    btnTwo = ()=>{
        this.setState({
            stramUri:false ,PlayTwo:!this.state.PlayTwo
        })
        if(!this.state.PlayOne){
            this.setState({
                PlayOne:true
            })
 
        }
    }

    render() {
        return (
            <ImageBackground source={require("../resources/images/bg1.png")} resizeMode="cover" style={{ flex: 1 }} resizeMode="cover">
                <ScrollView contentContainerStyle={{ flexGrow: 1 }}>
                <StatusBar backgroundColor="transparent" translucent />

                    <View style={{ flex: 1 }}>
                        {/* <HeaderPage switchValue={this.state.switchValue} onSwitch={this.onToggele} headerTitle="" /> */}
                        <View style={styles.mainView}>
                            {
                                this.state.switchValue ?
                                    <WebViewPage hideSpinner={this.hideSpinner} isLoading={this.state.isLoading} uri={"https://nrttv.com/nrt2/Default.aspx"}/>
                                    :
                                    <AudioComponent btnTwo={this.btnTwo} PlayTwo={this.state.PlayTwo} PlayOne={ this.state.PlayOne }  btnOne={this.btnOne} audioStreamuri={this.state.stramUri }   />
                            }
                            {/* <Image source={require("../resources/images/nrtLogo.png")} /> */}
                        </View>
                    </View>
                </ScrollView>
            </ImageBackground>

        )
    }
}

const styles = StyleSheet.create({
    mainView: {
        flex: 1,
        marginTop:moderateScale(25)
        // justifyContent: "center",
        // alignItems: "center",
    },

});